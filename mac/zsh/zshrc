##############################################################################
# File: zshrc
# Description: ZSH configuration used with oh-my-zsh
# Author: James Klein
##############################################################################

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export PROJECT_DIR=$HOME/GitHubRepos
export DOTFILES_DIR=$PROJECT_DIR/dotfiles

# On slow systems, checking the cached .zcompdump file to see if it must be
# regenerated adds a noticable delay to zsh startup.  This little hack restricts
# it to once a day.  It should be pasted into your own completion file.
#
# The globbing is a little complicated here:
# - '#q' is an explicit glob qualifier that makes globbing work within zsh's [[ ]] construct.
# - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globbing error)
# - '.' matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are older than 24 hours.
autoload -Uz compinit
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
	compinit;
else
	compinit -C;
fi;

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="jamesklein"

# make _ and - interchangeable
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# ignore insecure completion-dependent directories
ZSH_DISABLE_COMPFIX=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="mm/dd/yyyy"

HISTSIZE=1000000 # amount of commands saved in history

# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# NOTE: zsh-syntax-highlighting was affecting boot performance
# NOTE: Follow the oh-my-zsh install instructions and check out `develop` branch
# https://github.com/zsh-users/zsh-autosuggestions#oh-my-zsh
# Currently there is an issue on master
# See https://github.com/zsh-users/zsh-autosuggestions/issues/241
plugins=(git bundler osx rake ruby rails tmux docker zsh-autosuggestions)

# QT added to path to fix gem install capybara-webkit issue
export PATH=~/Qt5.5.1/5.5/clang_64/bin:~/.rbenv/shims:/usr/local/bin:/usr/bin:$PATH

# NOTE: PATH must be before this
source $ZSH/oh-my-zsh.sh

# source local env vars if they exist
export LOCAL_CONFIG=$HOME/Dropbox/EnvironmentConfigurations/zshrc.local
if [ -f $LOCAL_CONFIG ]; then
  source $LOCAL_CONFIG
fi

export EDITOR='vim' # Preferred editor for local and remote sessions
export SSH_KEY_PATH="~/.ssh/rsa_id" # ssh
export MYVIMRC='~/.vimrc'

# See https://github.com/zsh-users/zsh-autosuggestions#usage
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20 # turn off autosuggest for large paste
export ZSH_AUTOSUGGEST_USE_ASYNC=1 # do autosuggest async

# Git
# use the default merge message so that EDITOR does not open
export GIT_MERGE_AUTOEDIT=no

# Load all .zsh config files in this dir
# NOTE: must come after oh-my-zsh.sh is sourced
for file in "$DOTFILES_DIR"/mac/zsh/*.zsh; do
  source "$file"
done

# cd tab completion with fzf
# taken from https://github.com/changyuheng/zsh-interactive-cd
# NOTE: I copied manually but should write a git command for fetching this
# source $DOTFILES_DIR/mac/zsh/plugins/zsh-interactive-cd.plugin.zsh

# tmuxinator autocomplete - allows `mux` in CLI
source $DOTFILES_DIR/mac/zsh/plugins/tmuxinator.zsh

# https://github.com/rbenv/rbenv/issues/142
eval "$(rbenv init -)"

### PYENV and Python - https://github.com/pyenv/pyenv ###
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
