# frozen_string_literal: true

# == Schema Information
#
# Table name: legal_entities
#
#  id            :bigint           not null, primary key
#  business_name :string           not null
#  customer_type :string           not null
#  date_created  :date
#  entity_type   :string           not null
#  international :boolean          default(FALSE), not null
#  jurisdiction  :string
#  revokable     :boolean          default(FALSE), not null
#  slug          :string           not null
#  uuid          :uuid             not null
#  created_at    :datetime         not null
#  updated_at    :datetime         not null
#  escrow_id     :bigint           not null
#  tax_id        :string           not null
#
# Indexes
#
#  index_legal_entities_on_escrow_id  (escrow_id)
#  index_legal_entities_on_slug       (slug) UNIQUE
#  index_legal_entities_on_uuid       (uuid) UNIQUE
#
# Foreign Keys
#
#  fk_rails_...  (escrow_id => escrows.id)
#
class LegalEntity < ApplicationRecord
  include Uuidable
  include Sluggable

  ENTITY_TYPES = {
    corporation: 'corporation',
    llc: 'llc',
    trust: 'trust'
  }.freeze

  CUSTOMER_TYPES = {
    buyer: 'buyer',
    seller: 'seller'
  }.freeze

  has_paper_trail(meta: { organization_id: ->(le) { le.escrow.organization_id } })

  belongs_to :escrow

  has_many :legal_ownerships, dependent: :destroy
  has_many :customers, through: :legal_ownerships

  normalizes_spacing :business_name, :tax_id, :jurisdiction

  validates :entity_type, presence: true, inclusion: { in: ENTITY_TYPES.values }
  validates :customer_type, presence: true, inclusion: { in: CUSTOMER_TYPES.values }
  validates :business_name, presence: true
  validates :tax_id, presence: true
  validates :jurisdiction, presence: true, unless: :international?
  validates :date_created, presence: true, if: :trust?

  def trust?
    entity_type == ENTITY_TYPES[:trust]
  end

  private

  def slug_source_attribute
    business_name
  end
end
