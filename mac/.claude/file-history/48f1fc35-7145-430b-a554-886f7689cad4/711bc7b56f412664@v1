# frozen_string_literal: true

# Basic form object for creating customers (buyers/sellers) in FinCEN layout
# Only includes essential contact information without complex verification logic
class CustomerBasicForm < BaseForm
  model :customer

  # Basic customer properties
  property :first_name, on: :customer
  property :last_name, on: :customer
  property :email, on: :customer
  property :phone_number, on: :customer

  # ActiveModel validations
  validates :first_name, presence: true
  validates :last_name, presence: true
  validates :email, presence: true, format: { with: URI::MailTo::EMAIL_REGEXP }
  validates :phone_number, presence: true

  attr_reader :customer_record

  # Initialize with escrow and build customer model
  def initialize(escrow, customer_type:, customer_attributes: {}, features: [], organization: nil)
    @escrow = escrow
    @organization = organization || escrow.organization
    @customer_type = customer_type
    @features = features

    customer = customer_type.classify.constantize.new(escrow: escrow)
    customer.assign_attributes(customer_attributes) if customer_attributes.present?

    super(customer: customer)
  end

  # Override save to use our service layer
  def save
    return false unless valid?

    SaveCustomerFormService.call(
      form: self,
      escrow: escrow,
      current_person: Current.person,
      invite_customer: false,
      features: features
    ) do |on|
      on.success do |customer|
        @customer_record = customer
        return true
      end
      on.failure do |errors|
        merge_service_errors(errors)
        return false
      end
    end
  end

  # Custom phone number normalization
  def phone_number=(value)
    normalized_phone = PhoneNumberFormatter.normalize(value)
    super(normalized_phone)
  end

  # CustomerBasicForm doesn't have verification_contact, so return nil
  def verification_contact
    nil
  end

  # URL for form submission
  def form_url
    case customer_type
    when 'buyer'
      Rails.application.routes.url_helpers.organization_escrow_fincen_layout_buyers_path(organization, escrow)
    when 'seller'
      Rails.application.routes.url_helpers.organization_escrow_fincen_layout_sellers_path(organization, escrow)
    end
  end

  # URL for cancel link / back to index
  def index_path
    case customer_type
    when 'buyer'
      Rails.application.routes.url_helpers.organization_escrow_fincen_layout_buyers_path(organization, escrow)
    when 'seller'
      Rails.application.routes.url_helpers.organization_escrow_fincen_layout_sellers_path(organization, escrow)
    end
  end

  private

  attr_reader :escrow, :organization, :customer_type, :features
end
